# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Publish Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      tag:
        type: string
        description: 'Tag to release (e.g. v1.0.0)'
        required: true
        default: 'v1.0.0'
      prerelease:
          description: "Prerelease"
          required: false
          default: false
          type: boolean

env:
  DEBIAN_FRONTEND: 'noninteractive'
  TZ: Etc/UTC
  IMAGE_NAME: nan/nan

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 5120
          swap-size-mb: 1024
          remove-dotnet: 'true'
      
      - name: Checkout branch
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ inputs.target }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set tag from input or trigger
        id: set_tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "::set-output name=tag::${{ github.event.inputs.tag }}"
          else
            echo "::set-output name=tag::$(echo "${{ github.ref }}" | sed 's/refs\/tags\///')"
          fi

      - name: lowercase github.repository
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY@L}" >> ${GITHUB_ENV}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.set_tag.outputs.tag }} .
          docker build -t ghcr.io/${{ env.IMAGE_NAME }}:latest .
      
      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.set_tag.outputs.tag }}
          docker push ghcr.io/${{ env.IMAGE_NAME }}:latest

  build-fallback:
    runs-on: self-hosted
    timeout-minutes: 345600
    needs: [build]
    if: failure()

    steps:
      - name: Checkout branch
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ inputs.target }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set tag from input or trigger
        id: set_tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "::set-output name=tag::${{ github.event.inputs.tag }}"
          else
            echo "::set-output name=tag::$(echo "${{ github.ref }}" | sed 's/refs\/tags\///')"
          fi

      - name: lowercase github.repository
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY@L}" >> ${GITHUB_ENV}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.set_tag.outputs.tag }} .
          docker build -t ghcr.io/${{ env.IMAGE_NAME }}:latest .
      
      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.set_tag.outputs.tag }}
          docker push ghcr.io/${{ env.IMAGE_NAME }}:latest

  publish:
    runs-on: ubuntu-latest
    needs: [build, build-fallback]
    if: success()
    steps:
      - name: Checkout branch
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ inputs.target }}
          fetch-depth: 0

      - name: Set tag from input or trigger
        id: set_tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "::set-output name=tag::${{ github.event.inputs.tag }}"
          else
            echo "::set-output name=tag::$(echo "${{ github.ref }}" | sed 's/refs\/tags\///')"
          fi

      - name: Get previous tag
        id: prev_tag
        run: |
          # Find the previous tag, excluding the current tag
          prev_tag=$(git describe --abbrev=0 --tags --exclude="$(git describe --abbrev=0 --tags ${{ steps.set_tag.outputs.tag }})")
          echo "::set-output name=prev_tag::${prev_tag}"

      - name: Publish release
        uses: notpeelz/action-gh-create-release@v5.0.1
        with:
          target: ${{ inputs.target }}
          tag: ${{ steps.set_tag.outputs.tag }}
          prerelease: ${{ inputs.prerelease }}
          draft: false
          strategy: replace
          title: Release ${{ steps.set_tag.outputs.tag }}
          body: |
              ## Changelog

              Changes since the last release: [${{ steps.prev_tag.outputs.prev_tag }}...${{ steps.set_tag.outputs.tag }}](https://github.com/${{ github.repository }}/compare/${{ steps.prev_tag.outputs.prev_tag }}...${{ steps.set_tag.outputs.tag }})

              ---
              
              Build made in GitHub Actions.
